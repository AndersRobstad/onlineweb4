# Generated by Django 2.1.9 on 2019-06-29 10:42

from django.db import migrations

"""
Port existing attendance_event data to registration model
"""


def load_data(apps, schema_editor):
    AttendanceEvent = apps.get_model('events', 'AttendanceEvent')
    Registration = apps.get_model('events', 'Registration')

    attendance_events: [AttendanceEvent] = AttendanceEvent.objects.all()
    for attendance in attendance_events:
        registration = Registration.objects.create(
            attendance=attendance,
            description=attendance.event.title,
            max_capacity=attendance.max_capacity,
        )
        for attendee in attendance.attendees.all():
            attendee.registration = registration
            attendee.save()

        for rule_bundle in attendance.rule_bundles.all():
            registration.rule_bundles.add(rule_bundle)

        if hasattr(attendance, 'reserved_seats'):
            attendance.reserved_seats.registration = registration
            attendance.reserved_seats.save()


def revert(apps, schema_editor):
    """
    In case the migration has to be removed, this will revert the changes applied
    when removing fields from AttendanceEvent
    """
    Registration = apps.get_model('events', 'Registration')

    registrations = Registration.objects.all()
    for registration in registrations:
        attendance = registration.attendance

        for rule_bundle in registration.rule_bundles.all():
            attendance.rule_bundles.add(rule_bundle)

        if hasattr(registration, 'reserved_seats'):
            reserved_seats = registration.reserved_seats
            reserved_seats.attendance_event = attendance
            reserved_seats.save()


class Migration(migrations.Migration):
    dependencies = [
        ('events', '0022_auto_20190629_1242'),
    ]

    operations = [
        migrations.RunPython(load_data, revert)
    ]
