eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgcmVzdG9yZS1jYWNoZToKICAgIGltYWdlOiBkcmlsbHN0ZXIvZHJvbmUtdm9sdW1lLWNhY2hlCiAgICB3aGVuOgogICAgICBldmVudDogcHVsbF9yZXF1ZXN0CiAgICByZXN0b3JlOiB0cnVlCiAgICBtb3VudDoKICAgICAgLSAvdXNyL2xvY2FsL2xpYi9weXRob24zLjUvc2l0ZS1wYWNrYWdlcwogICAgICAtIC4vbm9kZV9tb2R1bGVzCiAgICB2b2x1bWVzOgogICAgICAtIC90bXAvY2FjaGU6L2NhY2hlCgogIHRlc3Q6CiAgICBpbWFnZTogcmVnaXN0cnkub25saW5lLm50bnUubm8vZG90a29tL29ubGluZXdlYjQtdGVzdGJhc2UKICAgIHdoZW46CiAgICAgIGV2ZW50OiBwdWxsX3JlcXVlc3QKICAgIGNvbW1hbmRzOgogICAgICAtIGNwIG9ubGluZXdlYjQvc2V0dGluZ3MvZXhhbXBsZS1sb2NhbC5weSBvbmxpbmV3ZWI0L3NldHRpbmdzL2xvY2FsLnB5CiAgICAgIC0gbnBtIGluc3RhbGwgLS1kZXB0aD0wIC0tcXVpZXQKICAgICAgLSBwaXAgaW5zdGFsbCAtciByZXF1aXJlbWVudHMudHh0IC1yIHJlcXVpcmVtZW50cy10ZXN0aW5nLnR4dCAtLXF1aWV0CiAgICAgIC0gcHl0aG9uIHdlYnBhY2tfcmVzb2x2ZS5weQogICAgICAtIG5wbSBydW4gYnVpbGQ6cHJvZAogICAgICAtIG5wbSBydW4gbGludAogICAgICAtIGlzb3J0IC1jIC1yYyBhcHBzIG1pZGRsZXdhcmUgc2NyaXB0cyB1dGlscwogICAgICAtIGZsYWtlOCBhcHBzIG1pZGRsZXdhcmUgc2NyaXB0cyB1dGlscwogICAgICAtIHB5LnRlc3QgLS1jb3Y9YXBwcwogICAgICAtIHBpcCBpbnN0YWxsIGNvZGVjb3YgLS1xdWlldAogICAgICAtIGNvZGVjb3YKCiAgcmVidWlsZC1jYWNoZToKICAgIGltYWdlOiBkcmlsbHN0ZXIvZHJvbmUtdm9sdW1lLWNhY2hlCiAgICB3aGVuOgogICAgICBldmVudDogcHVsbF9yZXF1ZXN0CiAgICByZWJ1aWxkOiB0cnVlCiAgICBtb3VudDoKICAgICAgLSAvdXNyL2xvY2FsL2xpYi9weXRob24zLjUvc2l0ZS1wYWNrYWdlcwogICAgICAtIC4vbm9kZV9tb2R1bGVzCiAgICB2b2x1bWVzOgogICAgICAtIC90bXAvY2FjaGU6L2NhY2hlCgogIGRlcGxveToKICAgIGltYWdlOiBwbHVnaW5zL3NzaAogICAgaG9zdDogbmFuc2VuLm9ubGluZS5udG51Lm5vCiAgICB1c2VyOiByb290CiAgICBwb3J0OiAyMgogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKICAgICAgYnJhbmNoOiBkZXZlbG9wCiAgICBzY3JpcHQ6CiAgICAgIC0gL3Nydi93d3cvb3c0ZGV2L2RlcGxveS5zaAo.uXsS2M4Nk3SjKVHvynXwfSmRu-XTcRWLS4qKz_DxXd0